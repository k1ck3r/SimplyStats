/* eslint-disable multiline-comment-style */
import { KlasaClientOptions } from 'klasa';
import { RPoolConnectionOptions } from 'rethinkdb-ts';
import { ClientOptions } from '@elastic/elasticsearch';
import * as packageJSON from './package.json';

/**
 * In order to use the bot, copy this file to `config.ts`, fill in all the values and compile by running `npm run ts:compile`
 */

export const token = 'BOT TOKEN HERE';

/**
 * RethinkDB options
 *
 * Setup a different user than admin for your data's safety!
 */
export const rethinkdbOptions: RPoolConnectionOptions = {
	host: 'localhost',
	port: 20815,
	db: 'simplystats',
	user: 'admin',
	password: '',
	buffer: 100,
	max: 10000,
	pingInterval: 120000,
	pool: true,
	silent: true,
	timeout: 20,
	timeoutGb: 10000,
};

export const elasticsearchOptions: ClientOptions = {
	name: 'simplystats-es',
	node: 'http://localhost:9200',
	/* Remove the comments if you use this
	cloud: {
		id: 'ss',
		username: 'simplystats',
		password: 'owowhatsthis?',
	},
	*/
};

export const clientOptions: KlasaClientOptions = {
	commandEditing: true,
	commandLogging: true,
	console: {
		useColor: true,
		timestamps: 'DD[:]MM[:]YYYY [at] HH[:]mm[:]ss',
	},
	createPiecesFolders: false,
	noPrefixDM: false,
	pieceDefaults: {
		monitors: { ignoreOthers: false },
	},
	prefix: 'ss.',
	prefixCaseInsensitive: true,
	production: process.env.NODE_ENV === 'production',
	providers: {
		default: 'rethinkdb',
		rethinkdb: rethinkdbOptions,
	},
	readyMessage: (client) => {
		const { options: { shards } } = client;
		const internalShardCount = (shards as number[]).length;

		return [
			``,
			`   _____ _                 __      _____ __        __            `,
			`  / ___/(_)___ ___  ____  / /_  __/ ___// /_____ _/ /___  _______`,
			`  \\__ \\/ / __ \`__ \\/ __ \\/ / / / /\\__ \\/ __/ __ \`/ __/ / / / ___/`,
			` ___/ / / / / / / / /_/ / / /_/ /___/ / /_/ /_/ / /_/ /_/ (__  ) `,
			`/____/_/_/ /_/ /_/ .___/_/\\__, //____/\\__/\\__,_/\\__/\\__,_/____/  `,
			`                /_/      /____/                                  `,
			``,
			`                   Running on version: ${packageJSON.version}							`,
			`                   Running as: ${client.user!.tag}													`,
			`                   Guilds on ${internalShardCount} internal shard${internalShardCount === 1 ? '' : 's'}: ${client.guilds.size}`,
			``,
		].join('\n');
	},
	regexPrefix: /^((?:hello|hi)? ?(simplystats|ss)[!,\W]?)/i,
	schedule: { interval: 1000 },
};
